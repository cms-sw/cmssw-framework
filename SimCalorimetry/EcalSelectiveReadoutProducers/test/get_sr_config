#!/bin/bash

function sigHdl(){
    if [ -e $TMPFILE ]; then
	rm "$TMPFILE"
	true
    fi
    exit 0
}

trap sigHdl 0
TMPFILE=get_sr_config__.py

default_global_tag=START39_V6::All
default_db=frontier://FrontierProd/CMS_COND_34X_ECAL
default_auth=/afs/cern.ch/cms/DB/conddb
function help(){
    cat <<EOF    

Usage: get_sr_config [-l] [-T global_tag] [-t sr_tag] [-o FILE]"

Desciption: tool to retrieve Selective readout emulation setting from condition database.

OPTION:
  -l                       list available tags
  -T GLOBAL_TAG            specifies global tag (default: $default_global_tag) for tag list mode (see -l option)
  -t SR_TAG                specifies conddb tag for selective readout setting, if different than default from global tag
  -c DB                    specifies database connection string (default: $default_db)
  -P [ --auth-path ] PATH  path to authentication xml(default $default_auth)
  -o FILE                  dump configuration into a file instead of standard output
  -h --help                display this help

EOF
}

# Note that we use `"$@"' to let each command-line parameter expand to a
# separate word. The quotes around `$@' are essential!
# We need TEMP as the `eval set --' would nuke the return value of getopt.
temp=`getopt -o hlt:T:c:o: --long help,auth-path \
     -n 'get_sr_config' -- "$@"`
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

    # Note the quotes around `$TEMP': they are essential!
eval set -- "$temp"

global_tag=$default_global_tag
db=$default_db
auth=$default_auth
mode=read_config
out=/dev/stdout
unset sr_tag

while true ; do
    case "$1" in
        -h|--help) help; exit 0;; 
	-l) mode=list_tags; shift;;
	-T) globla_tag="$2"; shift 2;;
        -t) sr_tag="$2"; shift 2;;
	-c|--auth-path) db="$2"; shift 2;;
        -o) out="$2"; shift 2;;
        --) shift ; break ;; #end of options. It remains only the args.
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

if [ $# != 0 ]; then
    help
    exit 1
fi

if [ -z "$CMSSW_BASE" ]; then
    echo "No CMSSW environment defined. CMSSW environment must be set using scramv1 runtime command"
    exit
fi

if [ X$mode = Xlist_tags ]; then
    cmscond_list_iov -c "$db" -P/afs/cern.ch/cms/DB/conddb -a | grep EcalSRSetting
else
    cat > $TMPFILE <<EOF
import FWCore.ParameterSet.Config as cms

#global_tag='START39_V6::All'
#sr_tag = 'EcalSRSettings_beam2010_v01_mc'
#sr_tag = 'EcalSRSettings_beam2010_v01_offline'
#sr_tag = 'EcalSRSettings_fullreadout_v01_mc'
#sr_tag = 'EcalSRSettings_lowlumi_v01_mc'
#sr_tag = 'EcalSRSettings_lumi1e33_v01_mc'

process = cms.Process("ProcessOne")

process.MessageLogger = cms.Service("MessageLogger",
                                      debugModules = cms.untracked.vstring('*'),
                                      destinations = cms.untracked.vstring('cerr')
                                    )

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(1)
)
process.source = cms.Source("EmptySource")

process.readFromDB = cms.EDAnalyzer("EcalSRCondTools",
    mode = cms.string("read")
)

process.p = cms.Path(process.readFromDB)

# Conditions
process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')
process.GlobalTag.globaltag = '$global_tag'
EOF


    if [ -n "$sr_tag" ]; then
	cat >> "$TMPFILE" <<EOF
process.GlobalTag.toGet = cms.VPSet(
    cms.PSet(record = cms.string("EcalSRSettingsRcd"),
             tag = cms.string('$sr_tag'),
             connect = cms.untracked.string('$db')
             ))

EOF
    fi
    cmsRun $TMPFILE > "$out"
fi
