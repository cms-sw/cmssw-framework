#!/bin/tcsh

set iter = $1                          # final iteration number
set odir = `cd $2; pwd`                # get full output path
set name = `basename $odir`            # for job name
set jobs = `ls -d $odir/job*/ | wc -l` # number of jobs

## Submit jobs and iterate

@ i = `cat $odir/main/IOIteration.root` + 1

while (`bjobs -d -w |& grep $name/requeue$i` != "") # check if job name exists
  set name = $name/ # make job name unique to avoid name clash
end

echo Starting iteration = $i, final iteration = $iter, number of jobs = $jobs

while ($i <= $iter)

  echo Running iteration $i

  if ($jobs > 0) then
    @ j = 0 # job index

    bsub -q cmscaf -C 0 -J $name/align$i\[1-$jobs\] \
         -oo $odir/job%I/align$i.out \
         cp $odir/main/IOIteration.root .\; \
         cp $odir/main/IOAlignedPositions.root .\; \
         cmsRun $odir/job\$LSB_JOBINDEX/align.cfg

    sleep 5
    set id = `bjobs -J $name/align$i | tail -n1 | awk '{print $1}'`

    bsub -q cmscaf -C 0 -J $name/collect$i -w "done($id)" \
         -oo $odir/main/collect$i.out cmsRun $odir/main/collect.cfg

    bsub -q cmscaf -C 0 -J $name/stopreq$i -w "ended($name/collect$i)" \
         -o /dev/null bkill -J $name/requeue$i

## When <collect> job ends, <requeue> job is killed and gets an EXIT status.
## And we can stop requeuing failed <align> jobs.

    while (`bjobs -d -J $name/requeue$i |& grep EXIT` == "")
      bsub -q cmsinter -C 0 -J $name/requeue$i -w "numexit($id, > 0)" \
           -I brequeue -e $id
      sleep 10
    end

  else
    bsub -q cmscaf -C 0 -J $name/collect$i -K \
         -oo $odir/main/collect$i.out cmsRun $odir/main/collect.cfg
  endif

  sleep 5
  if (`bjobs -d -J $name/collect$i | tail -n1 | grep EXIT` != "") exit 1

## Clean up after collector has finished successfully.

  rm $odir/job*/IOUserVariables.root
  gzip $odir/job*/*.out
  gzip $odir/main/*.out

  @ i++
end
