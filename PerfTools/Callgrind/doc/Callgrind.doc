
/*!

\page PerfTools_Callgrind Package PerfTools/Callgrind

<center>
<small>

<!-- @CVS_TAG@ will be substituted at build time, no need to touch -->
<a href=http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/CMSSW/PerfTools/Callgrind/?cvsroot=CMSSW&only_with_tag=@CVS_TAG@>Source code (CVS tag: @CVS_TAG@)</a> - 
<a href=http://cmssw.cvs.cern.ch/cgi-bin/cmssw.cgi/CMSSW/PerfTools/Callgrind/.admin/developers?rev=HEAD&cvsroot=CMSSW&content-type=text/vnd.viewcvs-markup>Administrative privileges</a>
</small>
</center>

\section desc Description
<!-- Short description of what this package is supposed to provide -->
This Package contains a service <b>ProfilerService</b> and two analyzer modules
<b>StartProfilerAnalyzer</b> and <b>StopProfilerAnalyzer</b>
that allow to instrument only some portion of a cmsRun with
performance measurument tools. At the moment only callgrind is supported.
Extending it to other tools such as IgProf is easy.

\subsection interface Public interface
<!-- List the classes that are provided for use in other packages (if any) -->

- ProfilerService: provides a public interface mainly for the Start and Stop ProfilerAnalyzers.
It can be used by other modules and services though...

\subsection modules Modules
<!-- Describe modules implemented in this package and their parameter set -->

-  StartProfilerAnalyzer: start profiler (callgrind) instrumentation
-  StopProfilerAnalyzer:  stop profiler instrumentation

No set of parameters required

\subsection services Services
<!-- Describe services implemented in this package and their parameter set -->

- ProfilerService

Parameter Set

untracked int32 firstEvent <br>
untracked int32 lastEvent  <br>
untracked vstring paths <br>


\subsection tests Unit tests and examples
<!-- Describe cppunit tests and example configuration files -->
- testPerfToolsCallgrind: a unit test of public and internal API of the ProfilerService
- test.cfg: integration test of Service and Analyzers

\section status Status and planned development
<!-- e.g. completed, stable, missing features -->
Service and Analyzer Completed<br>
One may need to add some addional control in case a StopAnalyzer is not called:
for the time being the instrumentation is forced to stop at the end of each event.<br>
The Service may be extended to tools other than callgrind such as IgProf

<hr>
Last updated:
@DATE@  Author: Vincenzo Innocente.
*/

