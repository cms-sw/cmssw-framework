process TEST = {
       source = PoolSource {
                #untracked string fileName ="/data/meschi/data/0000000f_FilterUnitFramework_0_0.root"
		untracked vstring fileNames = {'file:/localscratch/s/segoni/00000027_FilterUnitFramework_0_0.root'}
                untracked int32 maxEvents =-1 
       }


        //module dummyunpacker = DummyUnpackingModule{ }
        module cscunpacker = CSCDCCUnpacker {
             untracked bool runDQM = true
        }

       service = MessageLogger {
                vstring destinations = {"CSCDQM.log"}
                PSet CSCDQM.log     = { bool noLineBreaks = true   }
                PSet detailedInfo.txt = { int32  lineLength = 132    }
       }
       
	service = CSCMonitor{
		untracked bool monitorVerbosity=true
		untracked bool   CSCDQMSaveRootFile = false
		untracked int32  EventsInterval = 100
		untracked string RootFileName ="CSCMonitorDigi.root"
	}

        service = DaqMonitorROOTBackEnd{}

        service = MonitorDaemon{
        # if true, will automatically start DQM thread in background
        untracked bool AutoInstantiate=true
        # if >=0, upon a connection problem, the source will automatically
        # attempt to reconnect with a time delay (secs) specified here
        # (default: 5)
        untracked int32 reconnect_delay = 5
        # collector hostname; examples:localhost(default),lxcmse2.cern.ch, etc
        untracked string DestinationAddress = "lxplus018.cern.ch"
        # port for communicating with collector (default: 9090)
        untracked int32 SendPort = 9090
        # monitoring period in ms (i.e. how often monitoring elements
        # are shipped to the collector; default: 1000)
        untracked int32 UpdateDelay = 3000
        # name of DQM source (default: DQMSource)
        untracked string NameAsSource = "FU0"
        }



        //module anawire = testCSCWireDigiDump {}

        module out = PoolOutputModule {
               untracked string fileName ="digi.root"
        }

        path p = {cscunpacker}
}

