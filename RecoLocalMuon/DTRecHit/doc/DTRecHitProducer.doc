/*!
<!-- Substitute RecoLocalMuon and DTRecHit with the proper names! -->

\page RecoLocalMuon_DTRecHit Package RecoLocalMuon/DTRecHit
<center>
<small>
<a href=http://cmsdoc.cern.ch/swdev/viewcvs/viewcvs.cgi/CMSSW/RecoLocalMuon/DTRecHit/?cvsroot=CMSSW&only_with_tag=@CVS_TAG@>Source code (CVS tag: @CVS_TAG@)</a> - 
<a href=http://cmsdoc.cern.ch/swdev/viewcvs/viewcvs.cgi/CMSSW/RecoLocalMuon/DTRecHit/.admin/developers?rev=HEAD&cvsroot=CMSSW&content-type=text/vnd.viewcvs-markup>Administrative privileges</a>
</small>
</center>


\section desc Description
<!-- Short description of what this package is supposed to provide -->
This package contains the EDProducer of 1D DTRecHits. The producer module access the various reconstruction
algorithms through Seal Plugins Factories.

\subsection interface Public interface
<!-- List the classes that are provided for use in other packages (if any) -->
\subsubsection  recalgo Reconstruction Algorithms
- DTRecHitAlgoFactory: Seal Plugin Factory for the access to reconstruction algorithms
- DTRecHitBaseAlgo:  base class of all reconstruction algorithms which defines their interface.


\subsubsection syncmodules Synchronization Modules
- DTTTrigSyncFactory: Seal Plugin Factory for  the access to synchronization plugins
- DTTTrigBaseSync:  base class for the plugins


\subsection modules Modules
<!-- Describe modules implemented in this package and their parameter set -->

The EDProducer of 1D DT RecHits is the module DTRecHitProducer.

The available plugins for reconstruction algorithms are:
- DTLinearDriftAlgo: reconstruction using constant drift velocity
- DTParametrizedDriftAlgo: reconstruction using the GARFIELD parametrization

The available plugins for synchronization are:
- DTTTrigSyncT0Only: for subtraction of t0 from pulses only (from DB)
- DTTTrigSyncFromDB: for subtraction of t0 and ttrig read from the DB
- DTTTrigSyncTOFCorr: designed for the simulation, this class define the offsets for RecHit building
 coherently to the digitization realized with the DTDigiSyncTOFCorr module.


An example of configuration parameters for this module is:
\verbatim
 module  dt1DRecHits = DTRecHitProducer {
                untracked bool debug = false
                InputTag dtDigiLabel = muondtdigi      
                # The reconstruction algo and its parameter set
                string recAlgo = 'DTLinearDriftAlgo'
                PSet recAlgoConfig = {
                        # The module to be used for ttrig synchronization and its paraemter set
                        string tTrigMode = 'DTTTrigSyncTOFCorr'
                        PSet tTrigModeConfig = {
                                untracked bool debug = false
                                # The offset to be subtracted to digi times (ns)
                                double tTrig = 496
                                # The velocity of signal propagation along the wire (cm/ns)
                                double vPropWire = 24.4
                                # The correction type for TOF
                                int32 tofCorrType = 2
                                }
                        # Drift velocity (cm/ns)                
                        double driftVelocity = 0.00543
                        # Times outside this window (ns) are considered 
                        # as coming from previous BXs
                        double minTime = -3
                        double maxTime = 415
                        # Cell resolution (cm)
                        double hitResolution = 0.02
                        untracked bool debug = false
                        }
        }

\endverbatim

Some predefined configuration files for this module are available:
- <b>dt1DRecHits_LinearDrift.cfi</b>: hit reconstruction using constant drift velocity over the entire cell
- <b>dt1DRecHits_ParamDrift.cfi</b>: reconstruction with GARFIELD parametrization
- <b>dt1DRecHits_LinearDrift_CosmicData.cfi</b>: reconstruction of real data from cosmic test
The name of the module in these cfi files is <i>dt1DRecHits</i>

\subsection tests Unit tests and examples
<!-- Describe cppunit tests and example configuration files -->

Exaple of configuration files for the production of 1D DTRecHits are:
- <b>testDTRecHitProducer.cfg</b>: for rechit building from simulated digis
- <b>testDTRecHitProducer_fromData.cfg</b>:for rechit building from real data


An example EDAnalyzer is implemented in the DTRecHitReader class. This analyzer produces some basic histos comparing the rechits with the simhit information.
Configuration files for this analyzer are:
- <b>DTRecHitReader_fromSimHit.cfg</b>: start from simhits
- <b>DTRecHitReader_fromDigi.cfg</b>: start from digis
- <b>DTRecHitReader_fromRecHit.cfg</b>: start from rechits


\section status Status and planned development
<!-- e.g. completed, stable, missing features -->

The package is under development! Stay tuned!

<hr>
Last updated: @DATE@
Author: G. Cerminara
*/
