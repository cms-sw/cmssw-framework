
/*!

\page RecoLocalMuon_CSCSegment Package RecoLocalMuon/CSCSegment

<center>
<small>

<!-- @PROJ_VERS@ will be substituted at build time, no need to touch -->
<a href=http://cmsdoc.cern.ch/swdev/viewcvs/viewcvs.cgi/CMSSW/RecoLocalMuon/CSCSegment/?cvsroot=CMSSW&only_with_tag=@PROJ_VERS@>CVS</a> - 
<a href=http://cmsdoc.cern.ch/swdev/viewcvs/viewcvs.cgi/CMSSW/RecoLocalMuon/CSCSegment/.admin/developers?rev=HEAD&cvsroot=CMSSW&content-type=text/vnd.viewcvs-markup>Administrative privileges</a>
</small>
</center>

\section desc Description
<!-- Short description of what this package is supposed to provide -->

This package contains the EDProducer of 4D CSC Segments. The producer module access the various reconstruction algorithms through Seal
Plugins Factories.

\subsection interface Public interface
<!-- List the classes that are provided for use in other packages (if any) -->


\subsection modules Modules
<!-- Describe modules implemented in this package and their parameter set -->

The EDProducer of 4D CSC Segments is the CSCSegmentProducer. 

An example of configuration parameters for this module is:
\verbatim
include "RecoLocalMuon/CSCSegment/data/cscSegmentAlgoSK.cfi"
include "RecoLocalMuon/CSCSegment/data/cscSegmentAlgoTC.cfi"

# module must be an EDProducer or similar
# =======================================
module segmentproducer = CSCSegmentProducer {
    
    # Name of RecHitProducer producer module(s)...
    string CSCRecHit2DProducer = "rechitproducer"
    
    # Choice of the building algo: 1 SK, 2 TC...
    int32 algo_type = 2   

    # std::vector<edm::ParameterSet>
    VPSet algo_psets = {
        {using CSCSegAlgoSK}, {using CSCSegAlgoTC}
    }
}
\endverbatim

Two different algorithms are available for the reconstruction:
- CSCSegAlgoSK: this is the original algorithm for building endcap muon track segments out of the rechit's in a CSCChamber. 
- CSCSegAlgoTC: this is an alternative algorithm for building endcap muon track segments out of the rechit's in a CSCChamber.

Some predefined configuration files for these algorithms are available:
- <b>cscSegmentAlgoSK.cfi</b>: parameter set for the CSCSegAlgoSK algorithm.
- <b>cscSegmentAlgoTC.cfi</b>: parameter set for the CSCSegAlgoTC algorithm.

The parameter set for each algorithm has been chosen according the results obtained with a sample of single muons with flat pT (10 to
50 GeV) and |eta| (0.8 to 2.4) distributions.

\subsection tests Unit tests and examples
<!-- Describe cppunit tests and example configuration files -->
An example of configuration file for the 4D CSCSegment production is:
- <b>CSCSegmentTest.cfg</b>: for segment building from simulated rechits.

An example EDAnalyzer is implemented in the CSCSegment class. This analyzer produces some basic histos: segment building efficiency per
chamber type, chi2 distribution, rechit per segment and built segments per event.
Configuration file for this analyzer is:
- <b>CSCSegmentReader.cfg</b>

\section status Status and planned development
<!-- e.g. completed, stable, missing features -->
The package is under development.

<hr>
Last updated: @DATE@  
Author: Matteo Sani.
*/

