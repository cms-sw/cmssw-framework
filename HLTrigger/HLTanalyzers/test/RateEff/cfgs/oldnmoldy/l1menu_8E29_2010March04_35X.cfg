#------------------------------------------------------
# Configuration file for Rate & Efficiency calculations
#------------------------------------------------------
# This version is compliant with RateEff-02-XX-XX
# using logical parser for L1 seeds
#

##########################################
# General Menu & Run conditions
##########################################
run:{
 nEntries = 1000000; # number of events per process to be run; -1: all available
 nPrintStatusEvery = 10000; # print out status every n events processed
 menuTag  = "L1_Menu8E29";
 alcaCondition = "startup";
 versionTag  = "2010March04L1_35X";
 isRealData = false;
 doPrintAll = true;
 dsList = "Datasets_1e31_20090701_v024_Mu14J20_L2Mu5G13.list";
};

##########################################
# Beam conditions
##########################################
beam:{
 bunchCrossingTime = 75.0E-09; # Design: 25 ns Startup: 75 ns
 iLumi = 1.E30;
 maxFilledBunches = 3564;
 nFilledBunches = 43;
 cmsEnergy = 7.; # Collision energy in TeV
};

##########################################
# Samples & Processes
##########################################
process:{
 isPhysicsSample = [0]; #Must be an int type
 names = ["minbias"];
 paths = ["rfio:/castor/cern.ch/user/a/apana/Summer09_312_7TeV_354redigi/MinBias/8e29/"];
 fnames = ["hltanalyzer_Summer09_MinBias_redigi354_START3X_V25_1*.root"];
 doMuonCuts = [false];
 doElecCuts = [false];
 sigmas = [7.13E10]; # xsecs * filter efficiencies
};



##########################################
# Menu
##########################################
menu:{
 isL1Menu = false; # Default is false: is HLT Menu
 doL1preloop = true; 

 # (TriggerName, Prescale, EventSize)
 triggers = ( 
#
  ("L1_SingleMu0", "L1_SingleMu0", 1, 0.15),
  ("L1_SingleMu3", "L1_SingleMu3", 1, 0.15),
  ("L1_SingleMu5", "L1_SingleMu5", 1, 0.15),
  ("L1_SingleMu7", "L1_SingleMu7", 1, 0.15),
  ("L1_SingleMu10", "L1_SingleMu10", 1, 0.15),
  ("L1_SingleMu14", "L1_SingleMu14", 1, 0.15),
  ("L1_SingleMu20", "L1_SingleMu20", 1, 0.15),
  ("L1_DoubleMuOpen", "L1_DoubleMuOpen", 1, 0.15),
  ("L1_DoubleMuTopBottom", "L1_DoubleMuTopBottom", 1, 0.15),
  ("L1_DoubleMu3", "L1_DoubleMu3", 1, 0.15),
#
  ("L1_SingleIsoEG5", "L1_SingleIsoEG5", 1, 0.15),
  ("L1_SingleIsoEG8", "L1_SingleIsoEG8", 1, 0.15),
  ("L1_SingleIsoEG10", "L1_SingleIsoEG10", 1, 0.15),
  ("L1_SingleIsoEG12", "L1_SingleIsoEG12", 1, 0.15),
  ("L1_SingleIsoEG15", "L1_SingleIsoEG15", 1, 0.15),
#
  ("L1_SingleEG5", "L1_SingleEG5", 1, 0.15),
  ("L1_SingleEG8", "L1_SingleEG8", 1, 0.15),
  ("L1_SingleEG10", "L1_SingleEG10", 1, 0.15),
  ("L1_SingleEG12", "L1_SingleEG12", 1, 0.15),
  ("L1_SingleEG15", "L1_SingleEG15", 1, 0.15),
  ("L1_SingleEG20", "L1_SingleEG20", 1, 0.15),
  ("L1_DoubleEG5", "L1_DoubleEG5", 1, 0.15),
  ("L1_DoubleEG05_TopBottom", "L1_DoubleEG05_TopBottom", 1, 0.15),
#
  ("L1_SingleJet6", "L1_SingleJet6", 1, 0.15),
  ("L1_SingleJet20", "L1_SingleJet20", 1, 0.15),
  ("L1_SingleJet30", "L1_SingleJet30", 1, 0.15),
  ("L1_SingleJet40", "L1_SingleJet40", 1, 0.15),
  ("L1_SingleJet50", "L1_SingleJet50", 1, 0.15),
  ("L1_SingleJet60", "L1_SingleJet60", 1, 0.15),
  ("L1_DoubleJet30", "L1_DoubleJet30", 1, 0.15),
  ("L1_TripleJet14", "L1_TripleJet14", 1, 0.15),
  ("L1_QuadJet6", "L1_QuadJet6", 1, 0.15),
#
  ("L1_SingleTauJet10", "L1_SingleTauJet10", 1, 0.15),
  ("L1_SingleTauJet20", "L1_SingleTauJet20", 1, 0.15),
  ("L1_SingleTauJet30", "L1_SingleTauJet30", 1, 0.15),
  ("L1_SingleTauJet40", "L1_SingleTauJet40", 1, 0.15),
  ("L1_SingleTauJet50", "L1_SingleTauJet50", 1, 0.15),
  ("L1_DoubleTauJet14", "L1_DoubleTauJet14", 1, 0.15),
#
  ("L1_ETM20", "L1_ETM20", 1, 0.15),
  ("L1_ETM30", "L1_ETM30", 1, 0.15),
  ("L1_ETM40", "L1_ETM40", 1, 0.15),
#  ("L1_ETM80", "", 1, 0.15),
  ("L1_ETM80", "L1_ETM80", 1, 0.15),
  ("L1_ETT60", "L1_ETT60", 1, 0.15),
  ("L1_HTT50", "L1_HTT50", 1, 0.15),
  ("L1_HTT100", "L1_HTT100", 1, 0.15),
  ("L1_HTT200", "L1_HTT200", 1, 0.15),
# 
  ("L1_IsoEG10_Jet6_ForJet6", "L1_IsoEG10_Jet6_ForJet6", 1, 0.15),
  ("L1_Mu3_Jet6U", "L1_Mu3_Jet6U", 1, 0.15),
  ("L1_Mu3QE8_Jet6", "L1_Mu3QE8_Jet6", 1, 0.15),
  ("L1_Mu5QE8_Jet6", "L1_Mu5QE8_Jet6", 1, 0.15),
#
  ("L1_SingleMuBeamHalo", "L1_SingleMuBeamHalo", 1, 0.15),
  ("L1_SingleMuOpen", "L1_SingleMuOpen", 1, 0.15),
  ("L1_SingleEG1", "L1_SingleEG1", 1, 0.15),
  ("L1_DoubleEG1", "L1_DoubleEG1", 1, 0.15),
  ("L1_SingleEG2", "L1_SingleEG2", 1, 0.15),
  ("L1_MinBias_HTT10", "L1_MinBias_HTT10", 1, 0.15),
  ("L1_ZeroBias", "L1_ZeroBias", 1, 0.15),
#
  ("L1_SingleHfBitCountsRing1_1", "L1_SingleHfBitCountsRing1_1", 1, 0.15),
  ("L1_SingleHfBitCountsRing2_1", "L1_SingleHfBitCountsRing2_1", 1, 0.15),
  ("L1_SingleHfRingEtSumsRing1_4", "L1_SingleHfRingEtSumsRing1_4", 1, 0.15),
  ("L1_SingleHfRingEtSumsRing2_4", "L1_SingleHfRingEtSumsRing2_4", 1, 0.15),
  ("L1_SingleHfRingEtSumsRing1_200", "L1_SingleHfRingEtSumsRing1_200", 1, 0.15),
  ("L1_SingleHfRingEtSumsRing2_200", "", 1, 0.15),
  ("L1_DoubleHfBitCountsRing1_P1N1", "", 1, 0.15),
  ("L1_DoubleHfBitCountsRing2_P1N1", "", 1, 0.15),
  ("L1_DoubleHfRingEtSumsRing1_P4N4", "", 1, 0.15),
  ("L1_DoubleHfRingEtSumsRing1_P200N200", "", 1, 0.15),
  ("L1_DoubleHfRingEtSumsRing2_P4N4", "", 1, 0.15),
  ("L1_DoubleHfRingEtSumsRing2_P200N200", "", 1, 0.15)
#
 );

 # For L1 prescale preloop to be used in HLT mode only
 L1triggers = ( 
#
  ("L1_SingleMu0", 1),
  ("L1_SingleMu3", 1),
  ("L1_SingleMu5", 1),
  ("L1_SingleMu7", 1),
  ("L1_SingleMu10", 1),
  ("L1_SingleMu14", 1),
  ("L1_SingleMu20", 1),
  ("L1_DoubleMuOpen", 1),
  ("L1_DoubleMuTopBottom", 1),
  ("L1_DoubleMu3", 1),
#
  ("L1_SingleIsoEG5", 1),
  ("L1_SingleIsoEG8", 1),
  ("L1_SingleIsoEG10", 1),
  ("L1_SingleIsoEG12", 1),
  ("L1_SingleIsoEG15", 1),
#
  ("L1_SingleEG5", 1),
  ("L1_SingleEG8", 1),
  ("L1_SingleEG10", 1),
  ("L1_SingleEG12", 1),
  ("L1_SingleEG15", 1),
  ("L1_SingleEG20", 1),
  ("L1_DoubleEG5", 1),
  ("L1_DoubleEG05_TopBottom", 100),
#
  ("L1_SingleJet6", 25),
  ("L1_SingleJet20", 1),
  ("L1_SingleJet30", 1),
  ("L1_SingleJet40", 1),
  ("L1_SingleJet50", 1),
  ("L1_SingleJet60", 1),
  ("L1_DoubleJet30", 1),
  ("L1_TripleJet14", 1),
  ("L1_QuadJet6", 1),
#
  ("L1_SingleTauJet10", 1),
  ("L1_SingleTauJet20", 1),
  ("L1_SingleTauJet30", 1),
  ("L1_SingleTauJet40", 1),
  ("L1_SingleTauJet50", 1),
  ("L1_DoubleTauJet14", 1),
#
  ("L1_ETM20", 1),
  ("L1_ETM30", 1),
  ("L1_ETM40", 1),
#  ("L1_ETM80", 1),
  ("L1_ETM80", 1),
  ("L1_ETT60", 1),
  ("L1_HTT50", 1),
  ("L1_HTT100", 1),
  ("L1_HTT200", 1),
# 
  ("L1_IsoEG10_Jet6_ForJet6", 1),
  ("L1_Mu3_Jet6U", 1),
  ("L1_Mu3QE8_Jet6", 1),
  ("L1_Mu5QE8_Jet6", 1),
#
  ("L1_SingleMuBeamHalo", 1),
  ("L1_SingleMuOpen", 1),
  ("L1_SingleEG1", 100),
  ("L1_DoubleEG1", 100),
  ("L1_SingleEG2", 100),
  ("L1_MinBias_HTT10", 10),
  ("OpenL1_ZeroBias", 5000),
  ("L1_ZeroBias", 5000),
#
  ("L1_SingleHfBitCountsRing1_1", 1000),
  ("L1_SingleHfBitCountsRing2_1", 1000),
  ("L1_SingleHfRingEtSumsRing1_4", 100),
  ("L1_SingleHfRingEtSumsRing2_4", 100),
  ("L1_SingleHfRingEtSumsRing1_200", 1),
  ("L1_SingleHfRingEtSumsRing2_200", 1),
  ("L1_DoubleHfBitCountsRing1_P1N1", 100),
  ("L1_DoubleHfBitCountsRing2_P1N1", 100),
  ("L1_DoubleHfRingEtSumsRing1_P4N4", 100),
  ("L1_DoubleHfRingEtSumsRing1_P200N200", 1),
  ("L1_DoubleHfRingEtSumsRing2_P4N4", 100),
  ("L1_DoubleHfRingEtSumsRing2_P200N200", 1, 1.)
#
 );
};

##########################################
#
# Only for experts:
# Select certain branches to speed up code.
# Modify only if you know what you do!
#
##########################################
branch:{
  doSelectBranches = true; #only set to true if you really know what you do!
  selectBranchL1 = true; 
  selectBranchHLT = true;
  selectBranchOpenHLT = true; 
  selectBranchReco = true;
  selectBranchL1extra = true; 
  selectBranchMC = false; 
};


### eof

