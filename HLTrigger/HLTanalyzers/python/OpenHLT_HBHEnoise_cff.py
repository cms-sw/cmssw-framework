# /users/amott/2012/HCalNoise/OpenHLTTowerCleaner/V2 (CMSSW_5_2_0_pre4_HLT6)

import FWCore.ParameterSet.Config as cms

from HLTrigger.HLTanalyzers.HLT_FULL_cff import *


HLTConfigVersion = cms.PSet(
  tableName = cms.string('/users/amott/2012/HCalNoise/OpenHLTTowerCleaner/V2')
)

hltHcalNoiseInfoProducerUpper = cms.EDProducer( "HcalNoiseInfoProducer",
    lMinRatio = cms.double( 0.7 ),
    lMaxHighEHitTime = cms.double( 9999.0 ),
    pMinHighEHitTime = cms.double( -4.0 ),
    lMaxLowEHitTime = cms.double( 9999.0 ),
    TS4TS5EnergyThreshold = cms.double( 50.0 ),
    digiCollName = cms.string( "hltHcalDigis" ),
    lMinHPDHits = cms.int32( 17 ),
    tMinRBXHits = cms.int32( 50 ),
    TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0, 4000.0 ),
    minEZeros = cms.double( 10.0 ),
    pMinRBXHits = cms.int32( 20 ),
    tMinHPDHits = cms.int32( 16 ),
    pMaxHPDEMF = cms.double( 0.02 ),
    minRecHitE = cms.double( 1.5 ),
    hlMaxRBXEMF = cms.double( 0.01 ),
    pMinEEMF = cms.double( 10.0 ),
    pMaxRatio = cms.double( 0.85 ),
    caloTowerCollName = cms.string( "hltTowerMakerForAll" ),
    minEEMF = cms.double( 50.0 ),
    pMaxHighEHitTime = cms.double( 5.0 ),
    pMaxLowEHitTime = cms.double( 6.0 ),
    minHighHitE = cms.double( 25.0 ),
    lMinZeros = cms.int32( 10 ),
    lMinRBXHits = cms.int32( 999 ),
    fillRecHits = cms.bool( True ),
    HcalRecHitFlagsToBeExcluded = cms.vint32( 11, 12, 13, 14, 15 ),
    maxCaloTowerIEta = cms.int32( 20 ),
    minLowHitE = cms.double( 10.0 ),
    pMinRatio = cms.double( 0.75 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    pMaxRBXEMF = cms.double( 0.02 ),
    pMinE = cms.double( 40.0 ),
    tMaxRatio = cms.double( 0.92 ),
    maxTrackEta = cms.double( 2.0 ),
    tMinHighEHitTime = cms.double( -7.0 ),
    TS4TS5LowerCut = cms.vdouble(-999, -999, -999, -999, -999, -999, -999 ),
    lMaxRatio = cms.double( 0.96 ),
    fillCaloTowers = cms.bool( True ),
    fillDigis = cms.bool( True ),
    lMinHighEHitTime = cms.double( -9999.0 ),
    pMinEZeros = cms.double( 5.0 ),
    pMinERatio = cms.double( 25.0 ),
    fillTracks = cms.bool( False ),
    trackCollName = cms.string( "generalTracks" ),
    pMinZeros = cms.int32( 4 ),
    minTrackPt = cms.double( 1.0 ),
    tMinRatio = cms.double( 0.73 ),
    TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72, 0.72 ),
    pMinLowEHitTime = cms.double( -6.0 ),
    pMinHPDHits = cms.int32( 10 ),
    lMinLowEHitTime = cms.double( -9999.0 ),
    recHitCollName = cms.string( "hltHbhereco" ),
    tMinHPDNoOtherHits = cms.int32( 9 ),
    minERatio = cms.double( 50.0 ),
    tMinLowEHitTime = cms.double( -9999.0 ),
    tMaxHighEHitTime = cms.double( 6.0 ),
    tMinZeros = cms.int32( 8 ),
    lMinHPDNoOtherHits = cms.int32( 10 ),
    maxProblemRBXs = cms.int32( 20 ),
    TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 150.0, 200.0, 300.0, 400.0, 500.0 ),
    tMaxLowEHitTime = cms.double( 9999.0 ),
    pMinHPDNoOtherHits = cms.int32( 7 ),
    hlMaxHPDEMF = cms.double( -9999.0 )
)
hltHcalNoiseInfoProducerLower = cms.EDProducer( "HcalNoiseInfoProducer",
    lMinRatio = cms.double( 0.7 ),
    lMaxHighEHitTime = cms.double( 9999.0 ),
    pMinHighEHitTime = cms.double( -4.0 ),
    lMaxLowEHitTime = cms.double( 9999.0 ),
    TS4TS5EnergyThreshold = cms.double( 50.0 ),
    digiCollName = cms.string( "hltHcalDigis" ),
    lMinHPDHits = cms.int32( 17 ),
    tMinRBXHits = cms.int32( 50 ),
    TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0, 4000.0 ),
    minEZeros = cms.double( 10.0 ),
    pMinRBXHits = cms.int32( 20 ),
    tMinHPDHits = cms.int32( 16 ),
    pMaxHPDEMF = cms.double( 0.02 ),
    minRecHitE = cms.double( 1.5 ),
    hlMaxRBXEMF = cms.double( 0.01 ),
    pMinEEMF = cms.double( 10.0 ),
    pMaxRatio = cms.double( 0.85 ),
    caloTowerCollName = cms.string( "hltTowerMakerForAll" ),
    minEEMF = cms.double( 50.0 ),
    pMaxHighEHitTime = cms.double( 5.0 ),
    pMaxLowEHitTime = cms.double( 6.0 ),
    minHighHitE = cms.double( 25.0 ),
    lMinZeros = cms.int32( 10 ),
    lMinRBXHits = cms.int32( 999 ),
    fillRecHits = cms.bool( True ),
    HcalRecHitFlagsToBeExcluded = cms.vint32( 11, 12, 13, 14, 15 ),
    maxCaloTowerIEta = cms.int32( 20 ),
    minLowHitE = cms.double( 10.0 ),
    pMinRatio = cms.double( 0.75 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    pMaxRBXEMF = cms.double( 0.02 ),
    pMinE = cms.double( 40.0 ),
    tMaxRatio = cms.double( 0.92 ),
    maxTrackEta = cms.double( 2.0 ),
    tMinHighEHitTime = cms.double( -7.0 ),
    TS4TS5LowerCut = cms.vdouble( -1.0, -0.95, -0.9, -0.9, -0.9, -0.9, -0.9 ),
    lMaxRatio = cms.double( 0.96 ),
    fillCaloTowers = cms.bool( True ),
    fillDigis = cms.bool( True ),
    lMinHighEHitTime = cms.double( -9999.0 ),
    pMinEZeros = cms.double( 5.0 ),
    pMinERatio = cms.double( 25.0 ),
    fillTracks = cms.bool( False ),
    trackCollName = cms.string( "generalTracks" ),
    pMinZeros = cms.int32( 4 ),
    minTrackPt = cms.double( 1.0 ),
    tMinRatio = cms.double( 0.73 ),
    TS4TS5UpperCut = cms.vdouble( 999.0, 999.0, 999.0, 999.0, 999.0 ),
    pMinLowEHitTime = cms.double( -6.0 ),
    pMinHPDHits = cms.int32( 10 ),
    lMinLowEHitTime = cms.double( -9999.0 ),
    recHitCollName = cms.string( "hltHbhereco" ),
    tMinHPDNoOtherHits = cms.int32( 9 ),
    minERatio = cms.double( 50.0 ),
    tMinLowEHitTime = cms.double( -9999.0 ),
    tMaxHighEHitTime = cms.double( 6.0 ),
    tMinZeros = cms.int32( 8 ),
    lMinHPDNoOtherHits = cms.int32( 10 ),
    maxProblemRBXs = cms.int32( 20 ),
    TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 150.0, 200.0, 300.0, 400.0, 500.0 ),
    tMaxLowEHitTime = cms.double( 9999.0 ),
    pMinHPDNoOtherHits = cms.int32( 7 ),
    hlMaxHPDEMF = cms.double( -9999.0 )
)
hltHcalNoiseInfoProducerNoR45 = cms.EDProducer( "HcalNoiseInfoProducer",
    lMinRatio = cms.double( 0.7 ),
    lMaxHighEHitTime = cms.double( 9999.0 ),
    pMinHighEHitTime = cms.double( -4.0 ),
    lMaxLowEHitTime = cms.double( 9999.0 ),
    TS4TS5EnergyThreshold = cms.double( 50.0 ),
    digiCollName = cms.string( "hltHcalDigis" ),
    lMinHPDHits = cms.int32( 17 ),
    tMinRBXHits = cms.int32( 50 ),
    TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0, 4000.0 ),
    minEZeros = cms.double( 10.0 ),
    pMinRBXHits = cms.int32( 20 ),
    tMinHPDHits = cms.int32( 16 ),
    pMaxHPDEMF = cms.double( 0.02 ),
    minRecHitE = cms.double( 1.5 ),
    hlMaxRBXEMF = cms.double( 0.01 ),
    pMinEEMF = cms.double( 10.0 ),
    pMaxRatio = cms.double( 0.85 ),
    caloTowerCollName = cms.string( "hltTowerMakerForAll" ),
    minEEMF = cms.double( 50.0 ),
    pMaxHighEHitTime = cms.double( 5.0 ),
    pMaxLowEHitTime = cms.double( 6.0 ),
    minHighHitE = cms.double( 25.0 ),
    lMinZeros = cms.int32( 10 ),
    lMinRBXHits = cms.int32( 999 ),
    fillRecHits = cms.bool( True ),
    HcalRecHitFlagsToBeExcluded = cms.vint32( 11, 12, 13, 14, 15 ),
    maxCaloTowerIEta = cms.int32( 20 ),
    minLowHitE = cms.double( 10.0 ),
    pMinRatio = cms.double( 0.75 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    pMaxRBXEMF = cms.double( 0.02 ),
    pMinE = cms.double( 40.0 ),
    tMaxRatio = cms.double( 0.92 ),
    maxTrackEta = cms.double( 2.0 ),
    tMinHighEHitTime = cms.double( -7.0 ),
    TS4TS5LowerCut = cms.vdouble(-999, -999, -999, -999, -999, -999, -999 ),
    lMaxRatio = cms.double( 0.96 ),
    fillCaloTowers = cms.bool( True ),
    fillDigis = cms.bool( True ),
    lMinHighEHitTime = cms.double( -9999.0 ),
    pMinEZeros = cms.double( 5.0 ),
    pMinERatio = cms.double( 25.0 ),
    fillTracks = cms.bool( False ),
    trackCollName = cms.string( "generalTracks" ),
    pMinZeros = cms.int32( 4 ),
    minTrackPt = cms.double( 1.0 ),
    tMinRatio = cms.double( 0.73 ),
    TS4TS5UpperCut = cms.vdouble( 999.0, 999.0, 999.0, 999.0, 999.0 ),
    pMinLowEHitTime = cms.double( -6.0 ),
    pMinHPDHits = cms.int32( 10 ),
    lMinLowEHitTime = cms.double( -9999.0 ),
    recHitCollName = cms.string( "hltHbhereco" ),
    tMinHPDNoOtherHits = cms.int32( 9 ),
    minERatio = cms.double( 50.0 ),
    tMinLowEHitTime = cms.double( -9999.0 ),
    tMaxHighEHitTime = cms.double( 6.0 ),
    tMinZeros = cms.int32( 8 ),
    lMinHPDNoOtherHits = cms.int32( 10 ),
    maxProblemRBXs = cms.int32( 20 ),
    TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 150.0, 200.0, 300.0, 400.0, 500.0 ),
    tMaxLowEHitTime = cms.double( 9999.0 ),
    pMinHPDNoOtherHits = cms.int32( 7 ),
    hlMaxHPDEMF = cms.double( -9999.0 )
)
hltHcalTowerNoiseCleanerUpper = cms.EDProducer( "HLTHcalTowerNoiseCleaner",
    TS4TS5EnergyThreshold = cms.double( 50.0 ),
    TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0, 4000.0 ),
    HcalNoiseRBXCollection = cms.InputTag( "hltHcalNoiseInfoProducerUpper" ),
    minHPDNoOtherHits = cms.int32( 10 ),
    minRBXEnergy = cms.double( 50.0 ),
    CaloTowerCollection = cms.InputTag( "hltTowerMakerForAll" ),
    minRecHitE = cms.double( 1.5 ),
    severity = cms.int32( 1 ),
    minHighHitE = cms.double( 25.0 ),
    numRBXsToConsider = cms.int32( 2 ),
    minRatio = cms.double( -999.0 ),
    maxHighEHitTime = cms.double( 9999.0 ),
    maxRBXEMF = cms.double( 0.02 ),
    minHPDHits = cms.int32( 17 ),
    needEMFCoincidence = cms.bool( True ),
    minZeros = cms.int32( 10 ),
    minLowHitE = cms.double( 10.0 ),
    TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72, 0.72 ),
    minHighEHitTime = cms.double( -9999.0 ),
    maxRatio = cms.double( 999.0 ),
    TS4TS5LowerCut = cms.vdouble(-999, -999, -999, -999, -999, -999, -999 ),
    maxTowerNoiseEnergyFraction = cms.double( 0.5 ),
    TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 150.0, 200.0, 300.0, 400.0, 500.0 ),
    minRBXHits = cms.int32( 999 ),
    maxNumRBXs = cms.int32( 2 )
)
hltHcalTowerNoiseCleanerLower = cms.EDProducer( "HLTHcalTowerNoiseCleaner",
    TS4TS5EnergyThreshold = cms.double( 50.0 ),
    TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0, 4000.0 ),
    HcalNoiseRBXCollection = cms.InputTag( "hltHcalNoiseInfoProducerLower" ),
    minHPDNoOtherHits = cms.int32( 10 ),
    minRBXEnergy = cms.double( 50.0 ),
    CaloTowerCollection = cms.InputTag( "hltTowerMakerForAll" ),
    minRecHitE = cms.double( 1.5 ),
    severity = cms.int32( 1 ),
    minHighHitE = cms.double( 25.0 ),
    numRBXsToConsider = cms.int32( 2 ),
    minRatio = cms.double( -999.0 ),
    maxHighEHitTime = cms.double( 9999.0 ),
    maxRBXEMF = cms.double( 0.02 ),
    minHPDHits = cms.int32( 17 ),
    needEMFCoincidence = cms.bool( True ),
    minZeros = cms.int32( 10 ),
    minLowHitE = cms.double( 10.0 ),
    TS4TS5UpperCut = cms.vdouble( 999.0, 999.0, 999.0, 999.0, 999.0 ),
    minHighEHitTime = cms.double( -9999.0 ),
    maxRatio = cms.double( 999.0 ),
    TS4TS5LowerCut = cms.vdouble( -1.0, -0.95, -0.9, -0.9, -0.9, -0.9, -0.9 ),
    maxTowerNoiseEnergyFraction = cms.double( 0.5 ),
    TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 150.0, 200.0, 300.0, 400.0, 500.0 ),
    minRBXHits = cms.int32( 999 ),
    maxNumRBXs = cms.int32( 2 )
)
hltHcalTowerNoiseCleanerNoR45 = cms.EDProducer( "HLTHcalTowerNoiseCleaner",
    TS4TS5EnergyThreshold = cms.double( 50.0 ),
    TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0, 4000.0 ),
    HcalNoiseRBXCollection = cms.InputTag( "hltHcalNoiseInfoProducerNoR45" ),
    minHPDNoOtherHits = cms.int32( 10 ),
    minRBXEnergy = cms.double( 50.0 ),
    CaloTowerCollection = cms.InputTag( "hltTowerMakerForAll" ),
    minRecHitE = cms.double( 1.5 ),
    severity = cms.int32( 1 ),
    minHighHitE = cms.double( 25.0 ),
    numRBXsToConsider = cms.int32( 2 ),
    minRatio = cms.double( -999.0 ),
    maxHighEHitTime = cms.double( 9999.0 ),
    maxRBXEMF = cms.double( 0.02 ),
    minHPDHits = cms.int32( 17 ),
    needEMFCoincidence = cms.bool( True ),
    minZeros = cms.int32( 10 ),
    minLowHitE = cms.double( 10.0 ),
    TS4TS5UpperCut = cms.vdouble( 999.0, 999.0, 999.0, 999.0, 999.0 ),
    minHighEHitTime = cms.double( -9999.0 ),
    maxRatio = cms.double( 999.0 ),
    TS4TS5LowerCut = cms.vdouble( -999.0, -999.0, -999.0, -999.0, -999.0, -999.0, -999.0 ),
    maxTowerNoiseEnergyFraction = cms.double( 0.5 ),
    TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 150.0, 200.0, 300.0, 400.0, 500.0 ),
    minRBXHits = cms.int32( 999 ),
    maxNumRBXs = cms.int32( 2 )
)

HLTDoLocalHcalSequence = cms.Sequence( hltHcalDigis + hltHbhereco + hltHfreco + hltHoreco )
HLTDoCaloSequence = cms.Sequence( hltEcalRawToRecHitFacility + hltEcalRegionalRestFEDs + hltEcalRecHitAll + HLTDoLocalHcalSequence + hltTowerMakerForAll )
OpenHLTHCalNoiseTowerCleanerSequence = cms.Sequence( HLTDoCaloSequence )
OpenHLTHCalNoiseTowerCleanerSequence = cms.Sequence( HLTDoCaloSequence + hltHcalNoiseInfoProducerUpper + hltHcalNoiseInfoProducerLower + hltHcalNoiseInfoProducerNoR45 + hltHcalTowerNoiseCleanerUpper + hltHcalTowerNoiseCleanerLower + hltHcalTowerNoiseCleanerNoR45 )


# En-able HF Noise filters in GRun menu
if 'hltHfreco' in locals():
    hltHfreco.setNoiseFlags = cms.bool( True )

# CMSSW version specific customizations
import os
cmsswVersion = os.environ['CMSSW_VERSION']

# dummyfy hltGetConditions in cff's
if 'hltGetConditions' in locals() and 'HLTriggerFirstPath' in locals() :
    hltDummyConditions = cms.EDFilter( "HLTBool",
        result = cms.bool( True )
    )
    HLTriggerFirstPath.replace(hltGetConditions,hltDummyConditions)

