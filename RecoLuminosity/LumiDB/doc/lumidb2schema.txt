1.          
create table revisions(
     revision_id uint64 PK,
     branch_id uint64 not null, 
     branch_name string,  (56)
     name string, unique  (56)
     comment string,   (1024)
     ctime   timestamp(6)
)
create table revisions_id(     #id helper table
     nextid uint64 PK
)
create index revisions_branch_id on revision(branchid)

2.
create table luminorms(
     data_id  uint64 PK
     entry_id    uint64 not null references luminorms_entries(entry_id),
     entry_name  string,  (56)
     amodetag string,     (28)
     norm_1     float,
     egev_1     uint32,
     norm_2     float,
     egev_2     uint32
)

create table luminorms_entries(   #versionable entity helper table
     entry_id uint64 PK,
     revision_id uint64 not null references revisions(revision_id),
     name    string  (56)
)

create table luminorms_id(          #id helper table
     nextid uint64 PK
)
create table luminorms_entries_id(    #id helper table
     nextid uint64 PK
)
create table luminorms_rev(   
    data_id uint64 not null references luminorms(data_id),
    revision_id uint64 not null references revisions(revision_id) 
   (data_id,revision_id) PK   
)
3.
create table lumidata(             #versionable data table
     data_id uint64 PK,
     entry_id    uint64 not null references lumidata_entries(entry_id),
     entry_name string,  (56)
     source     string,  (128)
     runnum     uint32,
     nominalegev float
)
create index lumidata_entry_id on lumidata(entry_id);

create table lumidata_id(          #id helper table
     nextid uint64 PK
)
create table lumidata_entries(       #versionable entity table
     entry_id     uint64 not null   ,
     revision_id  uint64 not null references revision(revision_id),
     name    string      (56)  
)
create table lumidata_rev(   
    data_id uint64 not null references lumidata(data_id),
    revision_id uint64 not null references revision(revision_id) 
   (data_id,revision_id) PK 
)
constraint lumidata_rev_uc unique(data_id,revision_id)
create index lumidata_rev_revision_id on lumidata_rev(revision_id);

create table lumidata_entries_id(   
     nextid uint64 PK
)

4.
create table cmsrunsummary(        #data table
     runnum uint32 PK,
     hltkey string not null, (128)
     l1key  string,          (128)
     fillnum uint32,  
     sequence    string,     (56)
     starttime   timestamp(6),
     stoptime    timestamp(6),   
     egev uint32,
     amodetag string      (28),
     fillscheme string(128),
     ncollidingbunches uint32
)
5. 
create table lumisummaryv2(         #data table
     data_id  uint64 not null PK references lumidata(data_id),
     runnum      uint32,  (redundant)
     cmslsnum    uint32,  
     lumilsnum   uint32,
     instlumi     float,
     instlumierror  float,
     instlumiquality  short,
     beamstatus   string,    (28)
     beamenergy float,
     cmsbxindexblob blob,
     beamintensityblob_1 blob,
     beamintensityblob_2 blob,
     numorbit            uint32,
     startorbit          uint32,
     bxlumivalue_occ1    blob,
     bxlumivalue_occ2    blob,
     bxlumivalue_et      blob,
     bxlumierr_occ1      blob,
     bxlumierr_occ2      blob,
     bxlumierr_et        blob,
     bxlumiquality_occ1  blob,
     bxlumiquality_occ2  blob,
     bxlumiquality_et    blob
)
6.
create table trgdata(                #verionable data table
     data_id uint64 PK,
     entry_id  uint64 not null references trgdata_entries(entry_id),
     entry_name string, (56)    
     source string,     (128)
     runnum   uint32,
     bitzeroname string, (56)
     bitnameclob clob
)
create table trgdata_rev(   
    data_id uint64 not null references trgdata(data_id),
    revision_id uint64 not null references revisions(revision_id) 
    (data_id,revision_id) PK 
)
constraint trgdata_rev_uc unique(data_id,revision_id)
create table trgdata_entries(       
     entry_id    uint64 not null	     ,
     revision_id uint64 not null references revisions(revision_id),
     name    string  (56)	 
)
create table trgdata_id(             #id helper table
     nextid uint64 PK
)
create table trgdata_entries_id(       #id helper table
     nextid uint64 PK
)
7.
create table lstrg(          #data table
     data_id uint64 not null references trgdata(data_id),
     runnum    uint32,   (redundant)
     cmslsnum  uint32,
     deadtimecount uint64,
     bitzerocount uint32,
     bitzeroprescale uint32,
     deadfrac float,
     pescalesblob   blob,
     trgcountblob   blob
)
8.
create table hltdata(                #vesionable data table
    data_id uint64 PK,	     
    entry_id    uint64 not null references hltdata_entries(entry_id),
    entry_name string, (56)
    runnum    uint32,
    source    string,  (128)
    npath    uint32,  
    pathnameclob clob
)
create table hltdata_entries(       
     entry_id    uint64 PK,
     revision_id uint64 not null references revisions(revision_id) ,
     name    string (56)
)
create table hltdata_id(         
     nextid uint64 PK
)
create table hltdata_entries_id(     
     nextid uint64 PK
)
create table hltdata_rev(   
    data_id uint64 not null references hltdata(data_id),
    revision_id uint64 not null references revisions(revision_id) 
    (data_id,revision_id) PK 
)
9.
create table lshlt(         
   data_id uint64 not null references hltdata(data_id),
   runnum   uint32 not null,
   cmslsnum uint32 not null,
   prescaleblob blob,
   hltcountblob    blob,
   hltacceptblob     blob
   (data_id,cmslsnum) PK
)
10.
create table trghltmap(           
   hltkey string(128) not null,
   hltpathname string(256) not null,
   l1seed      string(1024) not null
   (hltkey,hltpathname,l1seed) PK
)
11.
create table lumivalidation(      
   runnum uint32 not null,
   cmslsnum uint32 not null,
   flag string, (28)
   comment string (1024)
)
12
create table FILLSCHEME (
   fillscheme_id(uint64),        PK
   fillschemepattern(string),    NOT NULL (128)
   correctionfactor(float),      NOT NULL
)

new applications:

lumiNorm create -name a -defaultnorm value -normbyenergy "[{energy1:norm1},{energy2:norm2}]" -minrun 1234 -maxrun 5678 -m comment
lumiNorm describe -name a
lumiNorm list --verbose
lumiNorm modify -name a -normbyenergy "[{energy1:norm1},{energy2:norm2}]" -minrun 1234  -maxrun 6789 -m comment

lumiTagCommit tagname -m comment 
lumiTagCopy -sourcetag a -desttag b -m comment  
lumiTagDescribe tagname -datatype 'lumi,trg,hlt,norm' --verbose

Other tables:

create table INTGLUMI(
  intglumi_id uint64 PK,    
  runnum uint32 not null,
  startrun uint32,
  intglumi float
)
create table INTGLUMI(RUNNUM NUMBER(10),STARTRUN NUMBER(10), INTGLUMI BINARY_FLOAT , constraint PK_INTGLUMI primary key(RUNNUM,STARTRUN));
