#!/usr/bin/env python

import os
import sys
from optparse import OptionParser, OptionGroup

try:
    distBaseDirectory=os.path.abspath(os.path.join(os.path.dirname(__file__),".."))
    if not os.path.exists(distBaseDirectory) or not "Vispa" in os.listdir(distBaseDirectory):
        distBaseDirectory=os.path.abspath(os.path.join(os.path.dirname(__file__),"../python"))
    if not os.path.exists(distBaseDirectory) or not "Vispa" in os.listdir(distBaseDirectory):
        distBaseDirectory=os.path.abspath(os.path.expandvars("$CMSSW_BASE/python/FWCore/GuiBrowsers"))
    if not os.path.exists(distBaseDirectory) or not "Vispa" in os.listdir(distBaseDirectory):
        distBaseDirectory=os.path.abspath(os.path.expandvars("$CMSSW_RELEASE_BASE/python/FWCore/GuiBrowsers"))
except Exception:
    distBaseDirectory=os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]),".."))

sys.path.append(distBaseDirectory)

from Vispa.Plugins.ConfigEditor.ConfigDataAccessor import ConfigDataAccessor
from FWCore.GuiBrowsers.HTMLExport import HTMLExport, HTMLExportStatic
import os.path
import sys
"""
Command line tool for the HTMLExport mode of GuiBrowser

gfball
"""

parser = OptionParser(usage='Usage: %prog [options] file_cfg.py')

g1 = OptionGroup(parser,"Basic Options")

g1.add_option('-n', '--name', help='Name to use for output file(s). Defaults config_cfg.html', type='string', default=None, metavar='NAME')
g1.add_option('-s', '--static',action='store_true', default=False, help="Produce old ~static HTML output. Default is prettier, javascript-heavy output.")

g2 = OptionGroup(parser, "URLs", "Change the base URLs used for external links, if for whatever reason the defaults aren't working.")

g2.add_option("--jquery", default=None, help="URL for jQuery>=1.6")
g2.add_option("--cvs", default=None, help="Base URL for CMSSW CVS")
g2.add_option("--lxr", default=None, help="Base URL for CMSSW LXR")

parser.add_option_group(g1)
parser.add_option_group(g2)

(options,args)=parser.parse_args()
  
if not len(args) > 0:
    print "No config files specified. Please specify one."
    print args
    sys.exit(0)

for cfgfile in args:
    if not options.name:
        options.name = os.path.basename(cfgfile).rsplit('.',1)[0] + '.html'
    if not os.path.exists(cfgfile):
        print "File does not exist: %s" % cfgfile
  
    data = ConfigDataAccessor()
    data.open(cfgfile)
    
    if options.jquery:
        FWCore.GuiBrowsers.HTMLExport.JQUERY = options.jquery
    if options.cvs:
        FWCore.GuiBrowsers.HTMLExport.CVS = options.cvs
    if options.lxr:
        FWCore.GuiBrowsers.HTMLExport.LXR = options.lxr
    
    if options.static:
        html = HTMLExportStatic()
    else:
        html = HTMLExport()
    html.export(data,options.name,'html')
