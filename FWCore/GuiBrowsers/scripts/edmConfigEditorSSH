#! /usr/bin/env python
import unittest
import os.path
import sys

import logging
#logging.root.setLevel(logging.DEBUG)

try:
    distBaseDirectory=os.path.abspath(os.path.join(os.path.dirname(__file__),".."))
    if not os.path.exists(distBaseDirectory) or not "Vispa" in os.listdir(distBaseDirectory):
        distBaseDirectory=os.path.abspath(os.path.join(os.path.dirname(__file__),"../python"))
    if not os.path.exists(distBaseDirectory) or not "Vispa" in os.listdir(distBaseDirectory):
        distBaseDirectory=os.path.abspath(os.path.expandvars("$CMSSW_BASE/python/FWCore/GuiBrowsers"))
    if not os.path.exists(distBaseDirectory) or not "Vispa" in os.listdir(distBaseDirectory):
        distBaseDirectory=os.path.abspath(os.path.expandvars("$CMSSW_RELEASE_BASE/python/FWCore/GuiBrowsers"))
except Exception:
    distBaseDirectory=os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]),".."))

sys.path.append(distBaseDirectory)
from Vispa.Main.Directories import *
distBinaryBaseDirectory=os.path.join(baseDirectory,"dist")
sys.path.append(distBinaryBaseDirectory)

try:
    from sip import *
    from PyQt4.QtCore import *
    from PyQt4.QtGui import *
    from PyQt4.QtSvg import *
    from PyQt4.QtXml import *
except Exception,e:
    raise ImportError("Could not import PyQt4 : "+str(e))

qt_plugins_path=os.path.abspath(os.path.expandvars("$CMSSW_RELEASE_BASE/../../../external/qt/4.6.3-cms/plugins"))
QCoreApplication.addLibraryPath(qt_plugins_path)
qt_plugins_path=os.path.abspath(os.path.expandvars("$CMSSW_RELEASE_BASE/../../../external/qt/4.5.0-cms2/plugins"))
QCoreApplication.addLibraryPath(qt_plugins_path)
qt_plugins_path=os.path.abspath(os.path.expandvars("$CMSSW_RELEASE_BASE/../../../external/qt/4.5.2-cms2/plugins"))
QCoreApplication.addLibraryPath(qt_plugins_path)

setWebsiteUrl('http://twiki.cern.ch/twiki/bin/view/CMS/SWGuideConfigEditor')

from Vispa.Main.Application import Application
Application.NO_PROCESS_EVENTS=True
from Vispa.Share.ThreadChain import ThreadChain
ThreadChain.NO_THREADS_FLAG=True

from Vispa.Share import Profiling

if __name__ == "__main__":
    if not os.path.exists(preferencesDirectory):
        print "Preferences Directory not found. Creating it under "+preferencesDirectory
        try:
            os.mkdir(preferencesDirectory)
        except IOError:
            print "Directory could not be created. No logging."
    app=Application(sys.argv)
    app.disconnect(app.mainWindow(), SIGNAL("windowActivated()"), app.tabChanged)
    app.mainWindow().setWindowTitle("ConfigEditor")
    app.run()
