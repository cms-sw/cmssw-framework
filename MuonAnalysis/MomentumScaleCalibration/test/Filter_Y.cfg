process FILTER = {
  source = PoolSource { 
    untracked vstring fileNames = {

    }
  }

  include "MuonAnalysis/MomentumScaleCalibration/test/CSA08_Y.cff"
 
  untracked PSet maxEvents = {untracked int32 input = 1000}

  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi" 
  include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
  include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"
  include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
  include "RecoMuon/TrackingTools/data/MuonServiceProxy.cff"

  module FilterModule = MuScleFitFilter { 

    using MuonServiceProxy

    # Choose the kind of muons you want to run on
    # -------------------------------------------

    // global muons
    InputTag MuonLabel = muons
    int32 muonType = 1
 
    // // standalone muons
    // InputTag MuonLabel = standAloneMuons:UpdatedAtVtx
    // int32 muonType = 2 

    // // tracker tracks
    // InputTag MuonLabel = generalTracks //ctfWithMaterialTracks
    // int32 muonType = 3 
	
    # Output settings
    # ---------------
    untracked vdouble Mmin = {0.1}
    untracked vdouble Mmax = {15.0}
    untracked int32 maxWrite = 1000
    untracked bool debug = false

  } 

  path p1 = {
    FilterModule
  }	

  module o1 = PoolOutputModule {
	
    untracked string fileName = "/tmp/Filter_Y.root"
    untracked vstring outputCommands = {
      "keep *"
    } 
    untracked PSet SelectEvents = {
      vstring SelectEvents = { "p1" }
    }

  }

  endpath outpath = { o1 } 

  # Keep the logging output to a nice level #
  # service = MessageLogger {
  #   untracked vstring destinations = {
  #     "debug.txt",
  #     "errors.txt"
  #   }
  #   untracked PSet debug.txt = { untracked string threshold = "DEBUG"    }
  #   untracked PSet cout = { untracked string threshold = "DEBUG"    }
  #   untracked vstring debugModules =  { "read" }
  # }
}


