HOW TO RUN A SET OF SCRIPTS/MACROS TO OBTAIN STATISTICAL ERRORS ON FIT
PARAMETERS USING MULTIPLE PSEUDO-EXPERIMENTS

# TO RUN THE JOBS:

- jobs are submitted to batch queues, so you need to work on lxplus
  (or another machine that can access lxbatch, NOT musclefit)

- to get all the material you will need:
    - cvs up -Ad MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors
    - cvs up -Ad MuonAnalysis/MomentumScaleCalibration/plugins

- all the scripts and macros can be found in
    MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors

- copy in you working area the following files:
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/MuScleFit_cfg.py    <your_area>/
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/TreeSplitter_cfg.py <your_area>/
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/singleJob.lsf       <your_area>/
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/SplitAndRunBatch.sh <your_area>/

- if you use these scripts as they are, you will run on a tree created
  from Summer10 J/psi with STARTUP conditions
  "tree_Summer10JPsiPromptSTARTUP.root" with pdf's taken from
  "Probs_merge.root" file.
  If you want to use a different sample or pdf file, you will have to 
  change accordingly
    - MuScleFit_cfg.py: line 246
    - singleJob.lsf: lines 17, 18
    - TreeSplitter_cfg.py: line 13

- make sure that the scripts are executable:
    - chmod +x singleJob.lsf
    - chmod +x SplitAndRunBatch.sh

- from your working area <your_area>, run
    - ./SplitAndRun.sh N K Q (WD)
      where
       - N  is the total number of events
       - K  is the number of events per job
       - Q  is the name of the queue where the jobs will be submitted
       - WD is the dir where "cmsenv" is done
	    (optional, default is "pwd")
      A directory like StatErrors_YYMMDD_HHMMSS will be created

- once all the jobs are done, you will find in this folder all the
  results: text files named "FitParameters_XXX.txt", with XXX from 1
  to N/K (you will also find other stuff that you won't need anymore, so you
  can safely get rid of it...)

# TO EXTRACT THE RESULTS:

- from here on, you can run on whatever machine you like, since
  everything is run locally

- copy in you working area the following files:
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/TakeParameterFromBatch.sh <your_area>/
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/MakePlot.C                <your_area>/
    - cp MuonAnalysis/MomentumScaleCalibration/test/StatisticalErrors/ExtractSigmas.sh          <your_area>/

- make sure that the scripts are executable:
    - chmod +x TakeParameterFromBatch.sh
    - chmod +x ExtractSigmas.sh

- if you are not running within a CMSSW working area, remember to set
  the CMSSW environment ("cmsenv" from within some CMSSW_X_Y_Z/src/)

- from your working area <your_area> (one level up
  w.r.t. StatErrors_YYMMDD_HHMMSS directory), run:
    - ./ExtractSigmas.sh F L (DIRNAME)
      where
       - F is the line number in files FitParameters_XXX.txt where the
	 first parameter of your fit is
	 (the line looks like "Results of the fit: parameter 0 has value ...+-... + ... - ...")
       - L is the line number in files FitParameters_XXX.txt where the
	 last parameter of your fit is
	 (N.B.:  L must be >= F)
       - DIRNAME is the name of the directory StatErrors_YYMMDD_HHMMSS
	 (optional; if there are more than one in <your_area>, the
	 last created will be considered by default).

- the outcome is
    - Sigmas.txt, where you will find the list of errors for all the
      parameters of the fit (sigma of gaussian fits)
    - plots named "plot_param_X.gif" for all the parameters of the
      fit. You may want to look at these plots and check that the
      fit looks sensible...
    - files named "OutputFit_param_X.txt" for all the parameters,
      containing the details of the fit.

# ADDITIONAL INFO

- the macro MakePlot.C performs the gaussian fit.
  The fit can sometimes give bad results because of "outliers"
  (entries that lie very far from the centre of the distribution) that
  make the binning of the plot inadequate.
  The macro tries to get rid of such outliers, and the total number of 
  rejected entries is reported in OutputFit_param_X.txt.
  - If you don't want to reject the outliers (e.g. if you want to try 
    some alternative way), you can edit MakePlot.C and uncomment the 
    lines 37-38.
  - if you want to fit the parameter distributions by hand, you can do
    as follows:
     - ./TakeParameterFromBatch.sh N (DIRNAME)
        - N is the number of the line where the parameter to extract is
        - DIRNAME just like in ExtractSigmas.sh
     - edit MakePlot.C and comment out lines 99-100
     - root -l MakePlot.C
        - this will produce the plot and the tentative fit for the
	  parameter and keep it open, so you can try to re-fit it as
	  you wish.
